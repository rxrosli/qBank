// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using qBank.Data.SQLite;

namespace qBank.Data.SQLite.Migrations
{
    [DbContext(typeof(SqliteContext))]
    [Migration("20210817090547_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.Property<string>("ExamsExamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionsQuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("ExamsExamId", "QuestionsQuestionId");

                    b.HasIndex("QuestionsQuestionId");

                    b.ToTable("ExamQuestion");
                });

            modelBuilder.Entity("qBank.Models.Exam", b =>
                {
                    b.Property<string>("ExamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ExamId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("qBank.Models.Fault", b =>
                {
                    b.Property<string>("FaultId")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("FaultId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Fault");
                });

            modelBuilder.Entity("qBank.Models.Question", b =>
                {
                    b.Property<string>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Statement")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("qBank.Models.Truth", b =>
                {
                    b.Property<string>("TruthId")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("TruthId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Truth");
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.HasOne("qBank.Models.Exam", null)
                        .WithMany()
                        .HasForeignKey("ExamsExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("qBank.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("qBank.Models.Fault", b =>
                {
                    b.HasOne("qBank.Models.Question", null)
                        .WithMany("Faults")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("qBank.Models.Truth", b =>
                {
                    b.HasOne("qBank.Models.Question", null)
                        .WithMany("Truths")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("qBank.Models.Question", b =>
                {
                    b.Navigation("Faults");

                    b.Navigation("Truths");
                });
#pragma warning restore 612, 618
        }
    }
}
